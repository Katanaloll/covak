local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")

local camlockEnabled = false
local triggerbotEnabled = false
local smoothnessX = 0.1
local smoothnessY = 0.1
local predictionX = 0.5
local predictionY = 0.5
local triggerDelay = 0.01
local camlockKey = Enum.KeyCode.C
local triggerbotKey = Enum.KeyCode.V -- New keybind for triggerbot toggle
local lockedTarget, lockedPart, lastTargetPos = nil, nil, nil

local function getClosestPlayerToMouse()
    local mouseLocation = UserInputService:GetMouseLocation()
    local closestPlayer, closestDistance = nil, math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local worldPos = player.Character.HumanoidRootPart.Position
            local screenPos, onScreen = Camera:WorldToViewportPoint(worldPos)

            if onScreen then
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - mouseLocation).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    return closestPlayer
end

local function getClosestPartOfPlayer(player)
    if player and player.Character then
        return player.Character:FindFirstChild("HumanoidRootPart")
    end
    return nil
end

-- Camlock Logic
local function updateCamlock()
    if camlockEnabled and lockedTarget then
        local humanoid = lockedTarget.Character and lockedTarget.Character:FindFirstChild("Humanoid")
        if humanoid and humanoid.Health <= 5 then
            camlockEnabled = false
            lockedTarget, lockedPart, lastTargetPos = nil, nil, nil
            return
        end

        if lockedPart then
            local predictedPos = lockedPart.Position + Vector3.new(
                lockedTarget.Character.HumanoidRootPart.Velocity.X * predictionX,
                lockedTarget.Character.HumanoidRootPart.Velocity.Y * predictionY,
                0
            )

            lastTargetPos = lastTargetPos and lastTargetPos:Lerp(predictedPos, smoothnessX) or predictedPos
            Camera.CFrame = Camera.CFrame:Lerp(CFrame.lookAt(Camera.CFrame.Position, lastTargetPos), smoothnessX)
        else
            camlockEnabled = false
            lockedTarget, lockedPart, lastTargetPos = nil, nil, nil
        end
    end
end

-- Triggerbot Logic
local function updateTriggerbot()
    if triggerbotEnabled then
        local mouse = LocalPlayer:GetMouse()
        local target = mouse.Target

        if target and target.Parent:IsA("Model") and target.Parent:FindFirstChild("Humanoid") then
            local humanoid = target.Parent:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                mouse1click()
            end
        end

        wait(triggerDelay)
    end
end

-- Keybind Activation for Camlock & Triggerbot
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == camlockKey then
        camlockEnabled = not camlockEnabled
        if camlockEnabled then
            lockedTarget = getClosestPlayerToMouse()
            lockedPart = getClosestPartOfPlayer(lockedTarget)
            lastTargetPos = lockedPart and lockedPart.Position
            print("Locked onto:", lockedTarget and lockedTarget.Name or "None")
        else
            lockedTarget, lockedPart, lastTargetPos = nil, nil, nil
            print("Camlock Disabled")
        end
    elseif input.KeyCode == triggerbotKey then
        triggerbotEnabled = not triggerbotEnabled
        print("Triggerbot:", triggerbotEnabled and "Enabled" or "Disabled")
    end
end)

-- Continuous Execution
RunService.RenderStepped:Connect(updateCamlock)
while triggerbotEnabled do updateTriggerbot() end
