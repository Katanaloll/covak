local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")

-- Prevent multiple instances from stacking
if _G.CovakScriptRunning then
    warn("⚠️ Script already running! Preventing duplicate execution.")
    return
end
_G.CovakScriptRunning = true

-- Fetch values dynamically from the settings table (Ensures fresh settings per execution)
local camlockEnabled = getgenv().covakSettings.Camlock.Enabled
local triggerbotEnabled = getgenv().covakSettings.Triggerbot.Enabled
local smoothnessX = getgenv().covakSettings.Camlock.Smoothness.X
local smoothnessY = getgenv().covakSettings.Camlock.Smoothness.Y
local predictionX = getgenv().covakSettings.Camlock.Prediction.X
local predictionY = getgenv().covakSettings.Camlock.Prediction.Y
local triggerDelay = getgenv().covakSettings.Triggerbot.Delay
local camlockKey = getgenv().covakSettings.Camlock.Keybind
local triggerbotKey = getgenv().covakSettings.Triggerbot.Keybind

local lockedTarget, lockedPart, lastTargetPos = nil, nil, nil

-- Remove old keybind connections before registering new ones
if _G.CamlockConnection then _G.CamlockConnection:Disconnect() _G.CamlockConnection = nil end
if _G.TriggerbotConnection then _G.TriggerbotConnection:Disconnect() _G.TriggerbotConnection = nil end

local function getClosestPlayerToMouse()
    local mouseLocation = UserInputService:GetMouseLocation()
    local closestPlayer, closestDistance = nil, math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local worldPos = player.Character.HumanoidRootPart.Position
            local screenPos, onScreen = Camera:WorldToViewportPoint(worldPos)

            if onScreen then
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - mouseLocation).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    return closestPlayer
end

local function getClosestPartOfPlayer(player)
    if player and player.Character then
        return player.Character:FindFirstChild(getgenv().covakSettings.Camlock.HitPart)
    end
    return nil
end

-- Camlock Logic (Ensures smoothness and prediction reset properly)
local function updateCamlock()
    if camlockEnabled and lockedTarget then
        local humanoid = lockedTarget.Character and lockedTarget.Character:FindFirstChild("Humanoid")
        if humanoid and humanoid.Health <= 5 then
            camlockEnabled = false
            lockedTarget, lockedPart, lastTargetPos = nil, nil, nil
            return
        end

        if lockedPart then
            local predictedPos = lockedPart.Position + Vector3.new(
                lockedTarget.Character.HumanoidRootPart.Velocity.X * predictionX,
                lockedTarget.Character.HumanoidRootPart.Velocity.Y * predictionY,
                0
            )

            lastTargetPos = lastTargetPos and lastTargetPos:Lerp(predictedPos, smoothnessX) or predictedPos
            Camera.CFrame = Camera.CFrame:Lerp(CFrame.lookAt(Camera.CFrame.Position, lastTargetPos), smoothnessX)
        else
            camlockEnabled = false
            lockedTarget, lockedPart, lastTargetPos = nil, nil, nil
        end
    end
end

-- Triggerbot Logic (Ensures dynamic updates on execution)
local function updateTriggerbot()
    if triggerbotEnabled then
        local mouse = LocalPlayer:GetMouse()
        local target = mouse.Target

        if target and target.Parent:IsA("Model") and target.Parent:FindFirstChild("Humanoid") then
            local humanoid = target.Parent:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                mouse1click()
            end
        end

        wait(triggerDelay)
    end
end

-- UI Notification for Config Update (Shows when settings change)
local StarterGui = game:GetService("StarterGui")
StarterGui:SetCore("SendNotification", {
    Title = "Covak Script";
    Text = "Config Updated!";
    Duration = 3;
})

-- Keybind Activation (Removes old bindings before setting new ones)
_G.CamlockConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == camlockKey then
        camlockEnabled = not camlockEnabled
        if camlockEnabled then
            lockedTarget = getClosestPlayerToMouse()
            lockedPart = getClosestPartOfPlayer(lockedTarget)
            lastTargetPos = lockedPart and lockedPart.Position
            print("Locked onto:", lockedTarget and lockedTarget.Name or "None")
        else
            lockedTarget, lockedPart, lastTargetPos = nil, nil, nil
            print("Camlock Disabled")
        end
    end
end)

_G.TriggerbotConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == triggerbotKey then
        triggerbotEnabled = not triggerbotEnabled
        print("Triggerbot:", triggerbotEnabled and "Enabled" or "Disabled")
    end
end)

-- Continuous Execution (Ensures camlock & triggerbot run cleanly)
RunService.RenderStepped:Connect(updateCamlock)
while triggerbotEnabled do updateTriggerbot() end
